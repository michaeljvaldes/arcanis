{
    "containerDefinitions": [
        {
            "name": "web",
            "cpu": 0,
            "portMappings": [],
            "essential": true,
            "environment": [
                {
                    "name": "DJANGO_ALLOWED_HOSTS",
                    "value": "arcanis.fun"
                },
                {
                    "name": "CSRF_TRUSTED_ORIGINS",
                    "value": "https://arcanis.fun"
                },
                {
                    "name": "VIRTUAL_HOST",
                    "value": "arcanis.fun"
                },
                {
                    "name": "DEBUG",
                    "value": "0"
                },
                {
                    "name": "VIRTUAL_PORT",
                    "value": "8000"
                },
                {
                    "name": "LETSENCRYPT_HOST",
                    "value": "arcanis.fun"
                }
            ],
            "environmentFiles": [],
            "secrets": [
                {
                    "name": "POSTGRES_HOST",
                    "valueFrom": "arn:aws:secretsmanager:us-east-2:891377405852:secret:arcanis/postgres-creds-gsI0A5:host::"
                },
                {
                    "name": "POSTGRES_PORT",
                    "valueFrom": "arn:aws:secretsmanager:us-east-2:891377405852:secret:arcanis/postgres-creds-gsI0A5:port::"
                },
                {
                    "name": "POSTGRES_DB",
                    "valueFrom": "arn:aws:secretsmanager:us-east-2:891377405852:secret:arcanis/postgres-creds-gsI0A5:dbname::"
                },
                {
                    "name": "POSTGRES_USER",
                    "valueFrom": "arn:aws:secretsmanager:us-east-2:891377405852:secret:arcanis/postgres-creds-gsI0A5:username::"
                },
                {
                    "name": "POSTGRES_PASSWORD",
                    "valueFrom": "arn:aws:secretsmanager:us-east-2:891377405852:secret:arcanis/postgres-creds-gsI0A5:password::"
                },
                {
                    "name": "SECRET_KEY",
                    "valueFrom": "arn:aws:secretsmanager:us-east-2:891377405852:secret:arcanis/django-secret-key-hWl2nn:django-secret-key::"
                }
            ],
            "mountPoints": [
                {
                    "sourceVolume": "static_volume",
                    "containerPath": "/home/app/web/staticfiles",
                    "readOnly": false
                },
                {
                    "sourceVolume": "media_volume",
                    "containerPath": "/home/app/web/mediafiles",
                    "readOnly": false
                }
            ],
            "volumesFrom": [],
            "ulimits": [],
            "logConfiguration": {
                "logDriver": "awslogs",
                "options": {
                    "awslogs-group": "/ecs/arcanis-task-def",
                    "mode": "non-blocking",
                    "awslogs-create-group": "true",
                    "max-buffer-size": "25m",
                    "awslogs-region": "us-east-2",
                    "awslogs-stream-prefix": "ecs"
                },
                "secretOptions": []
            },
            "systemControls": []
        },
        {
            "name": "nginx-proxy",
            "cpu": 0,
            "links": [
                "web"
            ],
            "portMappings": [
                {
                    "name": "nginx-proxy-443-tcp",
                    "containerPort": 443,
                    "hostPort": 443,
                    "protocol": "tcp"
                },
                {
                    "name": "nginx-proxy-80-tcp",
                    "containerPort": 80,
                    "hostPort": 80,
                    "protocol": "tcp"
                }
            ],
            "essential": true,
            "environment": [],
            "environmentFiles": [],
            "mountPoints": [
                {
                    "sourceVolume": "certs",
                    "containerPath": "/etc/nginx/certs",
                    "readOnly": false
                },
                {
                    "sourceVolume": "html",
                    "containerPath": "/usr/share/nginx/html",
                    "readOnly": false
                },
                {
                    "sourceVolume": "vhost",
                    "containerPath": "/etc/nginx/vhost.d",
                    "readOnly": false
                },
                {
                    "sourceVolume": "static_volume",
                    "containerPath": "/home/app/web/staticfiles",
                    "readOnly": false
                },
                {
                    "sourceVolume": "media_volume",
                    "containerPath": "/home/app/web/mediafiles",
                    "readOnly": false
                },
                {
                    "sourceVolume": "docker_socket",
                    "containerPath": "/tmp/docker.sock",
                    "readOnly": true
                }
            ],
            "volumesFrom": [],
            "dockerLabels": {
                "com.github.nginx-proxy.nginx": ""
            },
            "systemControls": []
        },
        {
            "name": "acme-companion",
            "image": "docker.io/nginxproxy/acme-companion:2.4",
            "cpu": 0,
            "links": [
                "nginx-proxy"
            ],
            "portMappings": [],
            "essential": true,
            "environment": [
                {
                    "name": "DEFAULT_EMAIL",
                    "value": "michael.j.valdes@gmail.com"
                }
            ],
            "environmentFiles": [],
            "mountPoints": [
                {
                    "sourceVolume": "docker_socket",
                    "containerPath": "/var/run/docker.sock",
                    "readOnly": true
                },
                {
                    "sourceVolume": "certs",
                    "containerPath": "/etc/nginx/certs",
                    "readOnly": false
                },
                {
                    "sourceVolume": "html",
                    "containerPath": "/usr/share/nginx/html",
                    "readOnly": false
                },
                {
                    "sourceVolume": "vhost",
                    "containerPath": "/etc/nginx/vhost.d",
                    "readOnly": false
                },
                {
                    "sourceVolume": "acme",
                    "containerPath": "/etc/acme.sh",
                    "readOnly": false
                }
            ],
            "volumesFrom": [],
            "systemControls": []
        }
    ],
    "family": "arcanis-task-def-github",
    "executionRoleArn": "arn:aws:iam::891377405852:role/ecsTaskExecutionRole",
    "networkMode": "bridge",
    "volumes": [
        {
            "name": "docker_socket",
            "host": {
                "sourcePath": "/var/run/docker.sock"
            }
        },
        {
            "name": "static_volume",
            "dockerVolumeConfiguration": {
                "scope": "task",
                "driver": "local"
            }
        },
        {
            "name": "media_volume",
            "dockerVolumeConfiguration": {
                "scope": "task",
                "driver": "local"
            }
        },
        {
            "name": "certs",
            "dockerVolumeConfiguration": {
                "scope": "task",
                "driver": "local"
            }
        },
        {
            "name": "html",
            "dockerVolumeConfiguration": {
                "scope": "task",
                "driver": "local"
            }
        },
        {
            "name": "vhost",
            "dockerVolumeConfiguration": {
                "scope": "task",
                "driver": "local"
            }
        },
        {
            "name": "acme",
            "dockerVolumeConfiguration": {
                "scope": "task",
                "driver": "local"
            }
        }
    ],
    "placementConstraints": [],
    "requiresCompatibilities": [
        "EC2"
    ],
    "cpu": "1024",
    "memory": "512",
    "runtimePlatform": {
        "cpuArchitecture": "X86_64",
        "operatingSystemFamily": "LINUX"
    },
    "tags": []
}